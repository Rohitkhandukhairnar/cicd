name: React Native CI/CD Demo

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ios:
    name: Build iOS App
    runs-on: macos-latest
    env:
      IOS_PROVISION_PROFILE_BASE64: ${{ secrets.IOS_PROVISION_PROFILE_BASE64 }}
      IOS_CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE_BASE64 }}
      IOS_CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
      BUNDLE_ID: ${{ secrets.BUNDLE_ID }}

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4
  
      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
  
      # Install dependencies
      - name: Install dependencies
        run: npm install
  
      # Install CocoaPods
      - name: Install Pods
        run: |
          cd ios
          pod install --repo-update
          
      - name: Setup Signing
        run: |
          set -euo pipefail
          echo "📦 Writing mobileprovision..."
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_PROVISION_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/app.mobileprovision
          echo "📦 Writing certificate..."
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          echo "🔐 Importing certificate..."
          security create-keychain -p github actions.keychain
          security import certificate.p12 -k ~/Library/Keychains/actions.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/actions.keychain
          security default-keychain -s ~/Library/Keychains/actions.keychain
          security unlock-keychain -p github ~/Library/Keychains/actions.keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k github ~/Library/Keychains/actions.keychain
          
      - name: Extract Provisioning Profile Info
        run: |
          PROFILE_PATH=~/Library/MobileDevice/Provisioning\ Profiles/app.mobileprovision
          security cms -D -i "$PROFILE_PATH" > profile.plist
          BUNDLE_ID=$(/usr/libexec/PlistBuddy -c "Print :Entitlements:application-identifier" profile.plist | cut -d'.' -f2-)
          PROFILE_UUID=$(/usr/libexec/PlistBuddy -c "Print :UUID" profile.plist)
          echo "BUNDLE_ID=$BUNDLE_ID" >> $GITHUB_ENV
          echo "PROFILE_UUID=$PROFILE_UUID" >> $GITHUB_ENV

          
      - name: Create exportOptions.plist
        run: |
          cat <<EOF > ios/exportOptions.plist
          {
            "compileBitcode": false,
            "destination": "export",
            "method": "app-store",
            "signingStyle": "manual",
            "teamID": "${APPLE_TEAM_ID}",
            "provisioningProfiles": {
              "${BUNDLE_ID}": "${PROFILE_UUID}"
            }
          }
          EOF
          cat ios/exportOptions.plist

  
  
      # Build iOS app (Release IPA)
      - name: Build iOS App
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        run: |
          cd ios
          xcodebuild -workspace cicddemo.xcworkspace \
            -scheme cicddemo \
            -sdk iphoneos \
            -configuration Release \
            -destination 'generic/platform=iOS' \
            archive -archivePath $PWD/build/cicddemo.xcarchive
  
          xcodebuild -exportArchive \
            -archivePath $PWD/build/cicddemo.xcarchive \
            -exportOptionsPlist $PWD/exportOptions.plist \
            -exportPath $PWD/build
  
      # Upload IPA artifact
      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: ios/build/*.ipa
