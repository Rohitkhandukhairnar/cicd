name: React Native CI/CD Demo

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  android:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          npm install
          cd android && ./gradlew clean

      - name: Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          
      - name: Build Release APK
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Upload Release APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-release
          path: android/app/build/outputs/apk/release/app-release.apk

  ios:
    name: Build iOS Release IPA
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Install Pods
        run: |
          cd ios
          pod install
          
      - name: Debug decoded certificate
        run: |
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          file certificate.p12
          openssl pkcs12 -in certificate.p12 -nokeys -passin pass:$IOS_CERTIFICATE_PASSWORD

      # Decode and install certificates/profiles
      - name: Setup Signing
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$IOS_PROVISION_PROFILE_BASE64" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/app.mobileprovision
          
          echo "$IOS_CERTIFICATE_BASE64" | base64 --decode > certificate.p12
          security create-keychain -p github actions.keychain
          security import certificate.p12 -k ~/Library/Keychains/actions.keychain -P "$IOS_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security list-keychains -s ~/Library/Keychains/actions.keychain
          security default-keychain -s ~/Library/Keychains/actions.keychain
          security unlock-keychain -p github ~/Library/Keychains/actions.keychain
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k github ~/Library/Keychains/actions.keychain

      # Build and archive
      - name: Build and Archive
        run: |
          cd ios
          xcodebuild -workspace cicddemo.xcworkspace \
                     -scheme cicddemo \
                     -configuration Release \
                     -archivePath build/cicddemo.xcarchive \
                     DEVELOPMENT_TEAM=$APPLE_TEAM_ID \
                     PRODUCT_BUNDLE_IDENTIFIER=$APPLE_BUNDLE_ID \
                     CODE_SIGN_IDENTITY="$APPLE_SIGNING_IDENTITY" \
                     archive

      # Export IPA
      - name: Export IPA
        run: |
          cd ios
          xcodebuild -exportArchive \
                     -archivePath build/cicddemo.xcarchive \
                     -exportOptionsPlist exportOptions.plist \
                     -exportPath build/ipa

      # Upload artifact
      - name: Upload IPA Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa-release
          path: ios/build/ipa/*.ipa
